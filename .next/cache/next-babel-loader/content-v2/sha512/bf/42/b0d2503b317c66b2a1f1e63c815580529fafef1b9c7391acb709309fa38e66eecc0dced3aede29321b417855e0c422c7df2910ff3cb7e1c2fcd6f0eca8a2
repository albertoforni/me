{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { shallow } from \"enzyme\";\nimport NavItem from \"./NavItem\";\nvar defaultProps = {\n  text: \"default text\",\n  icon: \"a default icon stream\",\n  navIndex: 1,\n  onNavItemClick: function onNavItemClick() {},\n  animationClasses: {\n    parentStartAnimation: \"\",\n    hideRoot: \"\",\n    parentStopAnimation: \"\"\n  }\n};\nit(\"renders the menu text\", function () {\n  var someText = \"some text\";\n  var wrapper = shallow(__jsx(NavItem, _extends({}, defaultProps, {\n    text: someText\n  })));\n  expect(wrapper.find(\"span\").text()).toEqual(someText);\n});\nit(\"renders an icon\", function () {\n  var someText = \"some text\";\n  var anIcon = \"a default icon stream\";\n  var wrapper = shallow(__jsx(NavItem, _extends({}, defaultProps, {\n    text: someText,\n    icon: anIcon\n  })));\n  var iconProps = wrapper.find(\"img\").props();\n  expect(iconProps.src).toEqual(anIcon);\n  expect(iconProps.alt).toEqual(someText);\n});\nit(\"renders the aria-labelledby with same key as the menu text\", function () {\n  var anIndex = 23;\n  var wrapper = shallow(__jsx(NavItem, _extends({}, defaultProps, {\n    navIndex: anIndex\n  })));\n  expect(wrapper.find(\"[aria-labelledby=\\\"menuLbl\".concat(anIndex, \"\\\"]\")).length).toEqual(1);\n  expect(wrapper.find(\"#menuLbl\".concat(anIndex)).length).toEqual(1);\n});\nit(\"calls onMenuItemClick when button is clicked\", function () {\n  var aSpyFunc = jest.fn();\n  var wrapper = shallow(__jsx(NavItem, _extends({}, defaultProps, {\n    onNavItemClick: aSpyFunc\n  })));\n  wrapper.find(\"button\").simulate(\"click\");\n  expect(aSpyFunc).toHaveBeenCalled();\n});\nit(\"disables the click when disabled is passed in\", function () {\n  var aSpyFunc = jest.fn();\n  var wrapper = shallow(__jsx(NavItem, _extends({}, defaultProps, {\n    onNavItemClick: aSpyFunc,\n    disabled: true\n  })));\n  wrapper.find(\"button\").simulate(\"click\");\n  expect(aSpyFunc).not.toHaveBeenCalled();\n});","map":null,"metadata":{},"sourceType":"module"}