{"ast":null,"code":"var _jsxFileName = \"/Users/albertoforni/Projects/me/pages/index/NavItem.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { style, merge, parent, select } from \"glamor\";\nimport { Button, Colors, MediaQueries } from \"../../common/style\";\nconst styles = {\n  navItem: (parentStartAnimation, hideRoot, parentStopAnimation) => merge({\n    height: 0,\n    opacity: 0,\n    marginBottom: \"1rem\",\n    overflow: \"hidden\",\n    transition: \"all 150ms ease-in-out\"\n  }, parent(`.${parentStartAnimation}`, {\n    height: \"4rem\",\n    opacity: 1,\n    overflow: \"visible\"\n  }), select(`.${hideRoot}`, {\n    height: 0,\n    opacity: 0,\n    margin: 0,\n    overflow: \"hidden\"\n  }), parent(`.${parentStopAnimation}`, {\n    transition: \"none\"\n  })),\n  menuButton: merge([Button.noStyle, {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }]),\n  menuButtonTextContainer: style({\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"4rem\",\n    width: \"70%\",\n    backgroundColor: Colors.green,\n    color: Colors.white,\n    transition: \"box-shadow 150ms ease-out\",\n    [MediaQueries.small]: {\n      width: \"60%\"\n    }\n  }),\n  menuButtonTextContent: style({\n    flex: 1,\n    paddingRight: \"2rem\",\n    letterSpacing: \"0.2rem\",\n    textAlign: \"right\",\n    textTransform: \"uppercase\"\n  }),\n  icon: style({\n    paddingLeft: \"2rem\"\n  })\n};\nconst menuButtonTextContainerHover = parent(`.${styles.menuButton.toString()}:enabled:hover`, {\n  boxShadow: \"1px 1px 6px 1px rgba(170,170,170,0.7)\"\n});\n\nconst NavItem = ({\n  icon,\n  text,\n  navIndex,\n  onNavItemClick,\n  disabled,\n  animationClasses: {\n    parentStartAnimation,\n    hideRoot,\n    parentStopAnimation\n  }\n}) => {\n  const menuLbl = `menuLbl${navIndex}`;\n  return __jsx(\"li\", {\n    role: \"menuitem\",\n    className: `${hideRoot} ${styles.navItem(parentStartAnimation, hideRoot, parentStopAnimation)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: `${styles.menuButton}`,\n    \"aria-labelledby\": menuLbl,\n    onClick: disabled ? null : onNavItemClick,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: merge(styles.menuButtonTextContainer, menuButtonTextContainerHover),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: styles.menuButtonTextContent,\n    id: menuLbl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, text)), __jsx(\"span\", {\n    className: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, icon)));\n};\n\nNavItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  navIndex: PropTypes.number.isRequired,\n  onNavItemClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  animationClasses: PropTypes.shape({\n    /* eslint-disable react/no-unused-prop-types */\n    parentStartAnimation: PropTypes.string,\n    hideRoot: PropTypes.string,\n    parentStopAnimation: PropTypes.string\n  })\n  /* eslint-enable react/no-unused-prop-types */\n\n};\nexport default NavItem;","map":{"version":3,"sources":["/Users/albertoforni/Projects/me/pages/index/NavItem.jsx"],"names":["React","PropTypes","style","merge","parent","select","Button","Colors","MediaQueries","styles","navItem","parentStartAnimation","hideRoot","parentStopAnimation","height","opacity","marginBottom","overflow","transition","margin","menuButton","noStyle","display","alignItems","width","menuButtonTextContainer","backgroundColor","green","color","white","small","menuButtonTextContent","flex","paddingRight","letterSpacing","textAlign","textTransform","icon","paddingLeft","menuButtonTextContainerHover","toString","boxShadow","NavItem","text","navIndex","onNavItemClick","disabled","animationClasses","menuLbl","propTypes","string","isRequired","number","func","bool","shape"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { style, merge, parent, select } from \"glamor\";\nimport { Button, Colors, MediaQueries } from \"../../common/style\";\n\nconst styles = {\n  navItem: (parentStartAnimation, hideRoot, parentStopAnimation) =>\n    merge(\n      {\n        height: 0,\n        opacity: 0,\n        marginBottom: \"1rem\",\n        overflow: \"hidden\",\n        transition: \"all 150ms ease-in-out\",\n      },\n      parent(`.${parentStartAnimation}`, {\n        height: \"4rem\",\n        opacity: 1,\n        overflow: \"visible\",\n      }),\n      select(`.${hideRoot}`, {\n        height: 0,\n        opacity: 0,\n        margin: 0,\n        overflow: \"hidden\",\n      }),\n      parent(`.${parentStopAnimation}`, {\n        transition: \"none\",\n      })\n    ),\n  menuButton: merge([\n    Button.noStyle,\n    {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n    },\n  ]),\n  menuButtonTextContainer: style({\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"4rem\",\n    width: \"70%\",\n    backgroundColor: Colors.green,\n    color: Colors.white,\n    transition: \"box-shadow 150ms ease-out\",\n    [MediaQueries.small]: {\n      width: \"60%\",\n    },\n  }),\n  menuButtonTextContent: style({\n    flex: 1,\n    paddingRight: \"2rem\",\n    letterSpacing: \"0.2rem\",\n    textAlign: \"right\",\n    textTransform: \"uppercase\",\n  }),\n  icon: style({\n    paddingLeft: \"2rem\",\n  }),\n};\n\nconst menuButtonTextContainerHover = parent(\n  `.${styles.menuButton.toString()}:enabled:hover`,\n  {\n    boxShadow: \"1px 1px 6px 1px rgba(170,170,170,0.7)\",\n  }\n);\n\nconst NavItem = ({\n  icon,\n  text,\n  navIndex,\n  onNavItemClick,\n  disabled,\n  animationClasses: { parentStartAnimation, hideRoot, parentStopAnimation },\n}) => {\n  const menuLbl = `menuLbl${navIndex}`;\n\n  return (\n    <li\n      role=\"menuitem\"\n      className={`${hideRoot} ${styles.navItem(\n        parentStartAnimation,\n        hideRoot,\n        parentStopAnimation\n      )}`}\n    >\n      <button\n        className={`${styles.menuButton}`}\n        aria-labelledby={menuLbl}\n        onClick={disabled ? null : onNavItemClick}\n        disabled={disabled}\n      >\n        <div\n          className={merge(\n            styles.menuButtonTextContainer,\n            menuButtonTextContainerHover\n          )}\n        >\n          <span className={styles.menuButtonTextContent} id={menuLbl}>\n            {text}\n          </span>\n        </div>\n        <span className={styles.icon}>{icon}</span>\n      </button>\n    </li>\n  );\n};\n\nNavItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  navIndex: PropTypes.number.isRequired,\n  onNavItemClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  animationClasses: PropTypes.shape({\n    /* eslint-disable react/no-unused-prop-types */\n    parentStartAnimation: PropTypes.string,\n    hideRoot: PropTypes.string,\n    parentStopAnimation: PropTypes.string,\n  }),\n  /* eslint-enable react/no-unused-prop-types */\n};\n\nexport default NavItem;\n"]},"metadata":{},"sourceType":"module"}