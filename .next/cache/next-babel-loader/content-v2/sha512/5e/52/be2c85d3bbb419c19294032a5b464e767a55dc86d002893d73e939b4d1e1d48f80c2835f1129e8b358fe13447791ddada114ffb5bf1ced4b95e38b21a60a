{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { style, merge } from \"glamor\";\nimport { List, Colors } from \"../common/style\";\nimport NavItem from \"./NavItem\";\nimport HamburgerMenu from \"./HamburgerMenu\";\nimport Button from \"../common/components/Button\";\nimport DomDelayedUpdate from \"../common/components/DomDelayedUpdate\";\nvar prevButtonStyle = style({\n  position: \"fixed\",\n  bottom: 10,\n  left: 10,\n  height: 40,\n  width: 40,\n  borderRadius: \"50%\",\n  border: \"1px solid \".concat(Colors.lightGray),\n  background: Colors.white,\n  outline: 0,\n  transition: \"all 150ms ease-out\",\n  transitionProperty: \"border-color, color\",\n  \":hover\": {\n    borderColor: Colors.green,\n    color: Colors.green\n  }\n});\nvar styles = {\n  menu: List.noStyle,\n  prevButton: prevButtonStyle,\n  nextButton: merge(prevButtonStyle, {\n    left: \"auto\",\n    right: 10\n  })\n};\nvar animationClasses = {\n  parentStartAnimation: \"parentStartAnimation\",\n  hideRoot: \"hideRoot\",\n  parentStopAnimation: \"parentStopAnimation\"\n};\n\nvar nextIndex = function nextIndex(items, currentIndex, onNavItemClick) {\n  var length = items.length;\n  var nextItemIndex = currentIndex + 1;\n  onNavItemClick(nextItemIndex >= length ? 0 : nextItemIndex);\n};\n\nvar prevIndex = function prevIndex(items, currentIndex, onNavItemClick) {\n  var prevItemIndex = currentIndex - 1;\n  onNavItemClick(prevItemIndex < 0 ? items.length - 1 : prevItemIndex);\n};\n\nvar Nav = /*#__PURE__*/function (_React$Component) {\n  _inherits(Nav, _React$Component);\n\n  var _super = _createSuper(Nav);\n\n  function Nav() {\n    _classCallCheck(this, Nav);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Nav, [{\n    key: \"resetMenu\",\n    value: function resetMenu() {\n      this.DomDelayedUpdate.reset();\n      this.props.onNavItemClick(-1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          navItems = _this$props.navItems,\n          _onNavItemClick = _this$props.onNavItemClick,\n          selectedItem = _this$props.selectedItem;\n      return __jsx(\"nav\", null, __jsx(\"div\", null, __jsx(Button, {\n        onClick: function onClick() {\n          return prevIndex(navItems, selectedItem, _onNavItemClick);\n        },\n        className: styles.prevButton.toString()\n      }, \"<\"), __jsx(Button, {\n        onClick: function onClick() {\n          return nextIndex(navItems, selectedItem, _onNavItemClick);\n        },\n        className: styles.nextButton.toString()\n      }, \">\")), __jsx(HamburgerMenu, {\n        onClick: function onClick() {\n          return _this.resetMenu();\n        },\n        show: selectedItem !== -1\n      }), __jsx(DomDelayedUpdate, {\n        mountClass: animationClasses.parentStartAnimation,\n        mountDelay: 150,\n        shouldUpdate: this.props.selectedItem !== -1,\n        updateClass: animationClasses.parentStopAnimation,\n        ref: function ref(component) {\n          _this.DomDelayedUpdate = component;\n        }\n      }, __jsx(\"ul\", {\n        className: styles.menu,\n        role: \"menubar\"\n      }, navItems.map(function (navItem, index) {\n        return __jsx(NavItem, _extends({}, navItem, {\n          animationClasses: _objectSpread(_objectSpread({}, animationClasses), {}, {\n            hideRoot: selectedItem !== -1 && selectedItem !== index ? animationClasses.hideRoot : \"\"\n          }),\n          navIndex: index,\n          onNavItemClick: function onNavItemClick() {\n            return _onNavItemClick(index);\n          },\n          key: index,\n          disabled: selectedItem !== -1\n        }));\n      }))));\n    }\n  }]);\n\n  return Nav;\n}(React.Component);\n\nexport default Nav;","map":null,"metadata":{},"sourceType":"module"}