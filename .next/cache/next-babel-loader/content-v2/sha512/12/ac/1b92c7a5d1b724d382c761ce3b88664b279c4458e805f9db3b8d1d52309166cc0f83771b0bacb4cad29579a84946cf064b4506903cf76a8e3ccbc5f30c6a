{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { style } from \"glamor\";\nimport Title from \"./Title\";\nimport Nav from \"./Nav\";\nimport Section from \"./Section\";\nimport { navItems, getSectionContent } from \"./SectionContents\";\nimport DomDelayedUpdate from \"../../common/components/DomDelayedUpdate\";\nvar showSectionClass = \"showSectionClass\";\nvar styles = {\n  root: style({\n    fontFamily: '\"Open Sans\", sans-serif'\n  })\n};\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeSection: -1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"changeSection\",\n    value: function changeSection(newSection) {\n      if (newSection !== -1) {\n        this.resetSection.reset(true);\n      }\n\n      this.setState({\n        activeSection: newSection\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeSection = this.state.activeSection;\n      return __jsx(\"div\", {\n        className: styles.root\n      }, __jsx(Title, null), __jsx(Nav, {\n        navItems: navItems,\n        onNavItemClick: function onNavItemClick(newSection) {\n          return _this2.changeSection(newSection);\n        },\n        selectedItem: activeSection\n      }), __jsx(DomDelayedUpdate, {\n        mountClass: showSectionClass,\n        shouldUpdateWithMountClass: true,\n        ref: function ref(component) {\n          _this2.resetSection = component;\n        }\n      }, __jsx(Section, {\n        parentClass: showSectionClass,\n        content: getSectionContent(activeSection)\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}