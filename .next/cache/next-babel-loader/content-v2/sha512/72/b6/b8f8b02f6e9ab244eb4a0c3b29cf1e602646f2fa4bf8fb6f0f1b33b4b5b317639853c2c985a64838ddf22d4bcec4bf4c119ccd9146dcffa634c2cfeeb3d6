{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/albertoforni/Projects/me/index/Section.jsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { merge, $, parent } from \"glamor\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Colors, MediaQueries } from \"../common/style\";\nvar styles = {\n  section: function section(parentClass) {\n    var _merge;\n\n    return merge((_merge = {\n      width: \"60%\",\n      margin: \"3rem auto\",\n      lineHeight: \"3.4rem\",\n      fontSize: \"2rem\",\n      opacity: 0\n    }, _defineProperty(_merge, MediaQueries.medium, {\n      width: \"80%\"\n    }), _defineProperty(_merge, MediaQueries.small, {\n      width: \"80%\"\n    }), _merge), parent(\".\".concat(parentClass), {\n      opacity: 1,\n      transition: \"opacity 400ms ease-out\"\n    }), $(\" h3\", {\n      margin: 0,\n      marginTop: \"4rem\"\n    }), $(\" h4\", {\n      margin: 0,\n      color: Colors.lightGray,\n      fontWeight: 400\n    }));\n  }\n};\n\nvar Section = function Section(_ref) {\n  var content = _ref.content,\n      parentClass = _ref.parentClass;\n  return __jsx(\"section\", {\n    className: styles.section(parentClass),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, __jsx(ReactMarkdown, {\n    source: content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c = Section;\nSection.propTypes = {\n  content: PropTypes.string.isRequired,\n  parentClass: PropTypes.string.isRequired\n};\nexport default Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"sources":["/Users/albertoforni/Projects/me/index/Section.jsx"],"names":["React","PropTypes","merge","$","parent","ReactMarkdown","Colors","MediaQueries","styles","section","parentClass","width","margin","lineHeight","fontSize","opacity","medium","small","transition","marginTop","color","lightGray","fontWeight","Section","content","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,CAAhB,EAAmBC,MAAnB,QAAiC,QAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,iBAArC;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,iBAACC,WAAD;AAAA;;AAAA,WACPR,KAAK;AAEDS,MAAAA,KAAK,EAAE,KAFN;AAGDC,MAAAA,MAAM,EAAE,WAHP;AAIDC,MAAAA,UAAU,EAAE,QAJX;AAKDC,MAAAA,QAAQ,EAAE,MALT;AAMDC,MAAAA,OAAO,EAAE;AANR,+BAOAR,YAAY,CAACS,MAPb,EAOsB;AACrBL,MAAAA,KAAK,EAAE;AADc,KAPtB,2BAUAJ,YAAY,CAACU,KAVb,EAUqB;AACpBN,MAAAA,KAAK,EAAE;AADa,KAVrB,YAcHP,MAAM,YAAKM,WAAL,GAAoB;AACxBK,MAAAA,OAAO,EAAE,CADe;AAExBG,MAAAA,UAAU,EAAE;AAFY,KAApB,CAdH,EAkBHf,CAAC,CAAC,KAAD,EAAQ;AAAES,MAAAA,MAAM,EAAE,CAAV;AAAaO,MAAAA,SAAS,EAAE;AAAxB,KAAR,CAlBE,EAmBHhB,CAAC,CAAC,KAAD,EAAQ;AAAES,MAAAA,MAAM,EAAE,CAAV;AAAaQ,MAAAA,KAAK,EAAEd,MAAM,CAACe,SAA3B;AAAsCC,MAAAA,UAAU,EAAE;AAAlD,KAAR,CAnBE,CADE;AAAA;AADI,CAAf;;AAyBA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYd,WAAZ,QAAYA,WAAZ;AAAA,SACd;AAAS,IAAA,SAAS,EAAEF,MAAM,CAACC,OAAP,CAAeC,WAAf,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEc,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADc;AAAA,CAAhB;;KAAMD,O;AAMNA,OAAO,CAACE,SAAR,GAAoB;AAClBD,EAAAA,OAAO,EAAEvB,SAAS,CAACyB,MAAV,CAAiBC,UADR;AAElBjB,EAAAA,WAAW,EAAET,SAAS,CAACyB,MAAV,CAAiBC;AAFZ,CAApB;AAKA,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { merge, $, parent } from \"glamor\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Colors, MediaQueries } from \"../common/style\";\n\nconst styles = {\n  section: (parentClass) =>\n    merge(\n      {\n        width: \"60%\",\n        margin: \"3rem auto\",\n        lineHeight: \"3.4rem\",\n        fontSize: \"2rem\",\n        opacity: 0,\n        [MediaQueries.medium]: {\n          width: \"80%\",\n        },\n        [MediaQueries.small]: {\n          width: \"80%\",\n        },\n      },\n      parent(`.${parentClass}`, {\n        opacity: 1,\n        transition: \"opacity 400ms ease-out\",\n      }),\n      $(\" h3\", { margin: 0, marginTop: \"4rem\" }),\n      $(\" h4\", { margin: 0, color: Colors.lightGray, fontWeight: 400 })\n    ),\n};\n\nconst Section = ({ content, parentClass }) => (\n  <section className={styles.section(parentClass)}>\n    <ReactMarkdown source={content} />\n  </section>\n);\n\nSection.propTypes = {\n  content: PropTypes.string.isRequired,\n  parentClass: PropTypes.string.isRequired,\n};\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}