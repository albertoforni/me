{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { shallow, mount } from \"enzyme\";\nimport App from \"./App\";\nimport Title from \"./Title\";\nimport Nav from \"./Nav\";\nimport Section from \"./Section\";\nimport { navItems } from \"./SectionContents\";\nimport DomDelayedUpdate from \"../../common/components/DomDelayedUpdate\";\nit(\"renders a title\", function () {\n  var wrapper = shallow(__jsx(App, null));\n  expect(wrapper.contains(__jsx(Title, null))).toEqual(true);\n});\nit(\"renders a navigation with the selected item -1\", function () {\n  var wrapper = shallow(__jsx(App, null));\n  expect(wrapper.find(Nav).length).toEqual(1);\n  var navProps = wrapper.find(Nav).props();\n  expect(navProps.navItems.length).toEqual(navItems.length);\n  expect(navProps.selectedItem).toEqual(-1);\n});\ndescribe(\"section\", function () {\n  it(\"renders a section inside a DomDelayedUpdate\", function () {\n    var wrapper = shallow(__jsx(App, null));\n    var domDelayedUpdate = wrapper.find(DomDelayedUpdate);\n    expect(domDelayedUpdate.find(Section).length).toEqual(1);\n    var domDelayedUpdateProps = domDelayedUpdate.props();\n    expect(domDelayedUpdateProps.mountClass).toEqual(\"showSectionClass\");\n  });\n  it(\"shows a section by empty content by default\", function () {\n    var wrapper = shallow(__jsx(App, null));\n    expect(wrapper.find(Section).length).toEqual(1);\n    expect(wrapper.find(Section).props().content).toEqual(\"\");\n  });\n  it(\"calls reset on DomDelayedUpdate and shows a section when Nav sets the section to 1\", function () {\n    var aDomDelayedUpdateSpyFn = jest.fn();\n    var wrapper = mount(__jsx(App, null));\n    wrapper.find(DomDelayedUpdate).last().node.reset = aDomDelayedUpdateSpyFn;\n    wrapper.find(Nav).props().onNavItemClick(1);\n    expect(aDomDelayedUpdateSpyFn).toHaveBeenCalledWith(true);\n    expect(wrapper.find(Section).props().content).not.toEqual(\"\");\n  });\n  it(\"does not calls reset on DomDelayedUpdate when active section is -1\", function () {\n    var aDomDelayedUpdateSpyFn = jest.fn();\n    var wrapper = mount(__jsx(App, null));\n    wrapper.find(DomDelayedUpdate).last().node.reset = aDomDelayedUpdateSpyFn;\n    wrapper.find(Nav).props().onNavItemClick(-1);\n    expect(aDomDelayedUpdateSpyFn).not.toHaveBeenCalled();\n    expect(wrapper.find(Section).props().content).toEqual(\"\");\n  });\n});","map":null,"metadata":{},"sourceType":"module"}