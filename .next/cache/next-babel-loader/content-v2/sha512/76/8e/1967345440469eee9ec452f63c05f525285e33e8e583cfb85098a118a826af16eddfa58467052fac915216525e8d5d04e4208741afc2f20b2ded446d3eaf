{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/albertoforni/Projects/me/pages/index/NavItem.jsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { PropTypes } from 'react';\nimport { style, merge, parent, select } from 'glamor';\nimport { Button, Colors, MediaQueries } from '../../common/style';\nvar styles = {\n  navItem: function navItem(parentStartAnimation, hideRoot, parentStopAnimation) {\n    return merge({\n      height: 0,\n      opacity: 0,\n      marginBottom: '1rem',\n      overflow: 'hidden',\n      transition: 'all 150ms ease-in-out'\n    }, parent(\".\".concat(parentStartAnimation), {\n      height: '4rem',\n      opacity: 1,\n      overflow: 'visible'\n    }), select(\".\".concat(hideRoot), {\n      height: 0,\n      opacity: 0,\n      margin: 0,\n      overflow: 'hidden'\n    }), parent(\".\".concat(parentStopAnimation), {\n      transition: 'none'\n    }));\n  },\n  menuButton: merge([Button.noStyle, {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  }]),\n  menuButtonTextContainer: style(_defineProperty({\n    display: 'flex',\n    alignItems: 'center',\n    height: '4rem',\n    width: '70%',\n    backgroundColor: Colors.green,\n    color: Colors.white,\n    transition: 'box-shadow 150ms ease-out'\n  }, MediaQueries.small, {\n    width: '60%'\n  })),\n  menuButtonTextContent: style({\n    flex: 1,\n    paddingRight: '2rem',\n    letterSpacing: '0.2rem',\n    textAlign: 'right',\n    textTransform: 'uppercase'\n  }),\n  icon: style({\n    paddingLeft: '2rem'\n  })\n};\nvar menuButtonTextContainerHover = parent(\".\".concat(styles.menuButton.toString(), \":enabled:hover\"), {\n  boxShadow: '1px 1px 6px 1px rgba(170,170,170,0.7)'\n});\n\nvar NavItem = function NavItem(_ref) {\n  var icon = _ref.icon,\n      text = _ref.text,\n      navIndex = _ref.navIndex,\n      onNavItemClick = _ref.onNavItemClick,\n      disabled = _ref.disabled,\n      _ref$animationClasses = _ref.animationClasses,\n      parentStartAnimation = _ref$animationClasses.parentStartAnimation,\n      hideRoot = _ref$animationClasses.hideRoot,\n      parentStopAnimation = _ref$animationClasses.parentStopAnimation;\n  var menuLbl = \"menuLbl\".concat(navIndex);\n  return __jsx(\"li\", {\n    role: \"menuitem\",\n    className: \"\".concat(hideRoot, \" \").concat(styles.navItem(parentStartAnimation, hideRoot, parentStopAnimation)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: \"\".concat(styles.menuButton),\n    \"aria-labelledby\": menuLbl,\n    onClick: disabled ? null : onNavItemClick,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: merge(styles.menuButtonTextContainer, menuButtonTextContainerHover),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: styles.menuButtonTextContent,\n    id: menuLbl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, text)), __jsx(\"img\", {\n    className: styles.icon,\n    role: \"presentation\",\n    alt: text,\n    src: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = NavItem;\nNavItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  navIndex: PropTypes.number.isRequired,\n  onNavItemClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  animationClasses: PropTypes.shape({\n    /* eslint-disable react/no-unused-prop-types */\n    parentStartAnimation: PropTypes.string,\n    hideRoot: PropTypes.string,\n    parentStopAnimation: PropTypes.string\n  })\n  /* eslint-enable react/no-unused-prop-types */\n\n};\nexport default NavItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavItem\");","map":{"version":3,"sources":["/Users/albertoforni/Projects/me/pages/index/NavItem.jsx"],"names":["React","PropTypes","style","merge","parent","select","Button","Colors","MediaQueries","styles","navItem","parentStartAnimation","hideRoot","parentStopAnimation","height","opacity","marginBottom","overflow","transition","margin","menuButton","noStyle","display","alignItems","width","menuButtonTextContainer","backgroundColor","green","color","white","small","menuButtonTextContent","flex","paddingRight","letterSpacing","textAlign","textTransform","icon","paddingLeft","menuButtonTextContainerHover","toString","boxShadow","NavItem","text","navIndex","onNavItemClick","disabled","animationClasses","menuLbl","propTypes","string","isRequired","number","func","bool","shape"],"mappings":"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","sourcesContent":["import React, { PropTypes } from 'react';\nimport { style, merge, parent, select } from 'glamor';\nimport { Button, Colors, MediaQueries } from '../../common/style';\n\nconst styles = {\n  navItem: (parentStartAnimation, hideRoot, parentStopAnimation) => merge(\n    {\n      height: 0,\n      opacity: 0,\n      marginBottom: '1rem',\n      overflow: 'hidden',\n      transition: 'all 150ms ease-in-out',\n    },\n    parent(`.${parentStartAnimation}`, {\n      height: '4rem',\n      opacity: 1,\n      overflow: 'visible',\n    }),\n    select(`.${hideRoot}`, {\n      height: 0,\n      opacity: 0,\n      margin: 0,\n      overflow: 'hidden',\n    }),\n    parent(`.${parentStopAnimation}`, {\n      transition: 'none',\n    })\n  ),\n  menuButton: merge([\n    Button.noStyle,\n    {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n    }]\n  ),\n  menuButtonTextContainer: style(\n    {\n      display: 'flex',\n      alignItems: 'center',\n      height: '4rem',\n      width: '70%',\n      backgroundColor: Colors.green,\n      color: Colors.white,\n      transition: 'box-shadow 150ms ease-out',\n      [MediaQueries.small]: {\n        width: '60%',\n      },\n    },\n  ),\n  menuButtonTextContent: style({\n    flex: 1,\n    paddingRight: '2rem',\n    letterSpacing: '0.2rem',\n    textAlign: 'right',\n    textTransform: 'uppercase',\n  }),\n  icon: style({\n    paddingLeft: '2rem',\n  }),\n};\n\nconst menuButtonTextContainerHover = parent(`.${styles.menuButton.toString()}:enabled:hover`, {\n  boxShadow: '1px 1px 6px 1px rgba(170,170,170,0.7)',\n});\n\nconst NavItem = ({\n  icon,\n  text,\n  navIndex,\n  onNavItemClick,\n  disabled,\n  animationClasses: {\n    parentStartAnimation,\n    hideRoot,\n    parentStopAnimation,\n  },\n  }) => {\n  const menuLbl = `menuLbl${navIndex}`;\n\n  return (\n    <li\n      role=\"menuitem\"\n      className={`${hideRoot} ${styles.navItem(parentStartAnimation, hideRoot, parentStopAnimation)}`}\n    >\n      <button\n        className={`${styles.menuButton}`}\n        aria-labelledby={menuLbl}\n        onClick={disabled ? null : onNavItemClick}\n        disabled={disabled}\n      >\n        <div className={merge(styles.menuButtonTextContainer, menuButtonTextContainerHover)}>\n          <span\n            className={styles.menuButtonTextContent}\n            id={menuLbl}\n          >{text}</span>\n        </div>\n        <img className={styles.icon} role=\"presentation\" alt={text} src={icon} />\n      </button>\n    </li>\n  );\n};\n\nNavItem.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  navIndex: PropTypes.number.isRequired,\n  onNavItemClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  animationClasses: PropTypes.shape({\n    /* eslint-disable react/no-unused-prop-types */\n    parentStartAnimation: PropTypes.string,\n    hideRoot: PropTypes.string,\n    parentStopAnimation: PropTypes.string,\n  }),\n  /* eslint-enable react/no-unused-prop-types */\n};\n\n\nexport default NavItem;\n"]},"metadata":{},"sourceType":"module"}