{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\n\nclass DomDelayedUpdate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"componentDom\", void 0);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.componentDom.classList.add(this.props.mountClass);\n    }, this.props.mountDelay);\n  }\n\n  componentDidUpdate() {\n    const {\n      shouldUpdate,\n      updateClass,\n      updateDelay,\n      shouldUpdateWithMountClass,\n      mountClass\n    } = this.props;\n    setTimeout(() => {\n      if (shouldUpdate) {\n        this.componentDom.classList.add(updateClass);\n      } else if (shouldUpdateWithMountClass) {\n        this.componentDom.className = mountClass;\n      } else {\n        this.componentDom.classList.remove(updateClass);\n      }\n    }, updateDelay);\n  }\n\n  reset(resetToEmptyClass) {\n    this.componentDom.className = resetToEmptyClass ? \"\" : this.props.mountClass;\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return __jsx(\"div\", {\n      ref: component => {\n        this.componentDom = component;\n      }\n    }, children);\n  }\n\n}\n\n_defineProperty(DomDelayedUpdate, \"defaultProps\", {\n  mountClass: \"default\",\n  mountDelay: 0,\n  shouldUpdate: false,\n  updateClass: \"default\",\n  updateDelay: 200\n});\n\nexport default DomDelayedUpdate;","map":null,"metadata":{},"sourceType":"module"}